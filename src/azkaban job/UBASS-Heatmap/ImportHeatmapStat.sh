#!/bin/bash
declare ${FILENAME}_insert="REPLACE INTO heatmap_stat(sysid, url, mx, my, browsername, browserversion, province, city, widthheight, counter, statdate) VALUES (?,?,?,?,?,?,?,?,?,?,?)"
declare ${FILENAME}_select="SELECT t1.sysid, t1.url, t1.mx, t1.my, t1.browsername, t1.browserversion, t1.province, t1.city, t1.widthheight, count(1) AS counter, '$1' FROM ( SELECT t.sysid, t.url, t.mx, t.my, parse_agent (t.ua) [ 'name' ] AS browsername, parse_agent (t.ua) [ 'version' ] AS browserversion, geoip (t.sclientip) [ 'city' ] AS city, geoip (t.sclientip) [ 'province' ] AS province, t.wh AS widthheight FROM ( SELECT sysid, url, mx, my, ua, sclientip, wh FROM ( SELECT sysid, concat( parse_url (slocation, 'PROTOCOL'),'://',parse_url (slocation, 'HOST'), parse_url (slocation, 'PATH')) AS url, get_json_object (sattach, '$.mx') AS mx, get_json_object (sattach, '$.my') AS my, useragent ua, sclientip, sclientid FROM upa_front_log WHERE sdate = '$1' AND stype = 'mousedown' ) md INNER JOIN ( SELECT DISTINCT sclientid, get_json_object (sattach, '$.width_height') AS wh FROM upa_front_log WHERE sdate = '$1' AND stype = 'dom.ready' ) dr ON MD.sclientid = dr.sclientid ) t distribute BY t.sysid, t.url sort BY t.sysid, t.url ) t1 GROUP BY t1.sysid, t1.url, t1.mx, t1.my, t1.browsername, t1.browserversion, t1.province, t1.city, t1.widthheight"
